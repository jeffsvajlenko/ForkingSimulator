CheckSimulation Checks:

Properties

FileVariants
	- Check for "Begin"
	- Check for "End"
	- Check Each Introduced Variant
		- Check header is correct
			- U or V
			- FileVariant# is correct
		- Check Original File
			- Exists
			- Is a regular file
			- Is logged properly
				- Exists
				- Is regular file
				- Is equivalent to the original file
		- # injections is correct
		- Injection locations are uniform is specified.
		- Check Each Injection
			- Header is correct
				- Rename: O or R
				- Mutation declaration format (O or ...)
			- Check injection
				- injected file exists
				- is inside the specified fork
				- is a regular file
			- Check name
				- Same name if declared not renamed
				- Different name if declared renamed
			- Check logging
				- injected file was logged
				- logged file is a regular file
				- logged file matches the injected file (content)
			- Check injection content
				- If mutated
					- if type 1
						- content is not equal
						- content is equal after type1 normalization
					- if type 2
						- content is not equal
						- content is not equal after type 1 normalization
						- content is equal after type 2 normalization
					- if type 3
						- content is not equal
						- content is not equal after type 1 normalization
						- content is not equal after type 2 normalization
						- content is not equal after type 1+2 normalization
				- If not mutated
					- content matches original

Directory Variants
	- Check "BEGIN"
	- Check "END"
	- Check Each Directory Varinats
		- Check Header is correct
			- U/V correct,
			- variant # is correct
		- Check original directory
			- exists, isDirectory, isLeaf, fromRepository
		- Check logging
			- original directory copied into log, and matches
		- Check # injection is correct
		
		- Check EACH injection
			- Check header
				- R/O, etc
			- Check uniform injection if applicable
			- Check Injection
				- injected into correct fork
				- injected directory exists, and is a leaf directory
			- Renamed if supposed to be renamed, or not if not
			- Check log up to this point
				- directory exists in dirs/, is directory, is leaf (rest later)

			- Check EACH injected file in injected directory
				- Check correct number of files (as reported)
				- Check header
					-R/O,M/O
				- Check original file
					-exists, is a regular file, is in origianl directory
				- Check injected file
					-exists, is a regular file, is in injected directory
				- Check Name
					- if renamed, renamed, if not, not.
				- Check Log
					- injected file exists in log directory (dirs/fork)
					- is a regular file
					- content matches injected
				- Check Mutation
					- times is valid
					- check comparison to original (tyep1/2/3)
				- Check Not Mutated
					- matches original
			- Check the original files reported are actually from original directory
			- Check each file in original directory was reported
			- Check the injected files are actually in the injected directory
			- Check the files of the injected directory were reported
	- Check the number of directory variants does not exceed numdirs

Fragment Variants
	-





