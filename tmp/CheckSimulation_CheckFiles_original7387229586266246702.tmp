/*
 * Copyright 1999-2004 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// $Id: JAXPPrefixResolver.java,v 1.1.2.1 2005/08/01 01:30:18 jeffsuttor Exp $

package X.X.X.X.X.X.X;

import X.X.X.X;
import X.X.X.X;
import X.X.X.X.X.X.X.X;

import X.X.X.X;

/**
 * <meta name="usage" content="general"/>
 * This class implements a Default PrefixResolver which
 * can be used to perform prefix-to-namespace lookup
 * for the XPath object.
 * This class delegates the resolution to the passed NamespaceContext
 */
public class X implements X
{

    private X X;


    public X ( X X )
    {
        X.X = X;
    }


    public X X( X X )
    {
        return X.X( X );
    }

    /**
     * Return the base identifier.
     *
     * @return null
     */
    public X X()
    {
        return 0;
    }

    /**
     * @see PrefixResolver#handlesNullPrefixes()
     */
    public X X()
    {
        return 0;
    }


    /**
     * The URI for the XML namespace.
     * (Duplicate of that found in com.sun.org.apache.xpath.internal.XPathContext).
     */

    public static final X X =
        0;


    /**
     * Given a prefix and a Context Node, get the corresponding namespace.
     * Warning: This will not work correctly if namespaceContext
     * is an attribute node.
     * @param prefix Prefix to resolve.
     * @param namespaceContext Node from which to start searching for a
     * xmlns attribute that binds a prefix to a namespace.
     * @return Namespace that prefix resolves to, or null if prefix
     * is not bound.
     */
    public X X(X X,
                                        X.X.X.X X)
    {
        X X = X;
        X X = 0;

        if (X.X(0))
        {
            X = X;
        }
        else
        {
            X X;

            while ((0 != X) && (0 == X)
                    && (((X = X.X()) == X.X)
                        || (X == X.X)))
            {

                if (X == X.X)
                {
                    X X = X.X();

                    for (X X = 0; X < X.X(); X++)
                    {
                        X X = X.X(X);
                        X X = X.X();
                        X X = X.X(0);

                        if (X || X.X(0))
                        {
                            X X = X.X(0);
                            X X =X ?X.X(X + 0) :0;

                            if (X.X(X))
                            {
                                X = X.X();
                                break;
                            }
                        }
                    }
                }

                X = X.X();
            }
        }
        return X;
    }

}

