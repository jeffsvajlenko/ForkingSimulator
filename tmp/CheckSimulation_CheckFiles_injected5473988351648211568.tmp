/*
 * %W% %E%
 *
 * Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */

package X.X.X.X;

import X.X.*;
import X.X.*;
import X.X.X.*;
import X.X.X.*;

/**
 * Provides the Synth look and feel for a password field.
 * The only difference from the standard text field is that
 * the view of the text is simply a string of the echo
 * character as specified in JPasswordField, rather than the
 * real text contained in the field.
 *
 * @author  Shannon Hickey
 * @version %I% %G%
 */
class X extends X
{

    /**
     * Creates a UI for a JPasswordField.
     *
     * @param c the JPasswordField
     * @return the UI
     */
    public static X X(X X)
    {
        return new X();
    }

    /**
     * Fetches the name used as a key to look up properties through the
     * UIManager.  This is used as a prefix to all the standard
     * text properties.
     *
     * @return the name ("PasswordField")
     */
    protected X X()
    {
        return 0;
    }

    /**
     * Creates a view (PasswordView) for an element.
     *
     * @param elem the element
     * @return the view
     */
    public X X(X X)
    {
        return new X(X);
    }

    X X(X X, X X, X X)
    {
        X.X().X(X, X, 0, 0,
                X.X(), X.X());
    }

    public X X(X X, X X, X X,
                            X X, X X, X X)
    {
        X.X().X(X, X, X, X, X, X);
    }

    protected X X()
    {
        X.X();
        X X = X.X(X());
        if (X != 0 && X.X(X.X) != 0)
        {
            X X = X.X(X.X);
            if (X != 0)
            {
                X.X(X.X, X);
            }
        }
    }
}
