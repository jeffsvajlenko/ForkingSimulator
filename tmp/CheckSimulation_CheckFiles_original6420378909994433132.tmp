package org.apache.commons.io.filefilter;

import java.io.File;

import java.io.FileFilter;

import java.io.FilenameFilter;

import java.io.Serializable;

public class DelegateFileFilter extends AbstractFileFilter implements Serializable {
    private final FilenameFilter filenameFilter;
    private final FileFilter fileFilter;

    public DelegateFileFilter (FilenameFilter filter) {
        if (filter == null) {
            throw new IllegalArgumentException ("The FilenameFilter must not be null");
        }
        this.filenameFilter = filter;
        this.fileFilter = null;
    }

    public DelegateFileFilter (FileFilter filter) {
        if (filter == null) {
            throw new IllegalArgumentException ("The FileFilter must not be null");
        }
        this.fileFilter = filter;
        this.filenameFilter = null;
    }

    @Override
    public boolean accept (File file) {
        if (fileFilter != null) {
            return fileFilter.accept (file);
        } else {
            return super.accept (file);
        }
    }

    @Override
    public boolean accept (File dir, String name) {
        if (filenameFilter != null) {
            return filenameFilter.accept (dir, name);
        } else {
            return super.accept (dir, name);
        }
    }

    @Override
    public String toString () {
        String delegate = fileFilter != null ? fileFilter.toString () : filenameFilter.toString ();
        return super.toString () + "(" + delegate + ")";
    }

}

