package X.X.X.X;

import X.X.X;

import X.X.X;

public class X {
    private X X;
    private X X;
    private X X;

    public X (X X, X X, X < X, ? > X) {
        if (X == 0 || X.X () == 0 || (X != X.X && X != X.X && X != X.X && X != X.X) || X == 0) throw new X ();

        if (X == X) X.X = X;

        if (X == X) X.X = X;

        if (X == X) X.X = X.X (X);

    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X < X, ? > X () {
        return X;
    }

    public static class X {
        private X X;
        public static final X X = new X (0);
        public static final X X = new X (0);
        public static final X X = new X (0);
        public static final X X = new X (0);

        private X (X X) {
            if (X == X) X.X = X;

        }

        public X X () {
            return (X.X.X.X.X (0) + X);
        }

    }

}

