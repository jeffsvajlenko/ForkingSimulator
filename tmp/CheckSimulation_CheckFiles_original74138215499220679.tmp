package X.X.X.X;

import X.X.*;

import X.X.X.*;

import X.X.X.*;

import X.X.X;

import X.X.*;

class X extends X {

    public static X X (X X) {
        return new X ();
    }

    protected X X () {
        return 0;
    }

    public X X (X X) {
        X.X (X);
        X (X.X ());
        X (X.X ());
    }

    protected X X (X X) {
        X.X (X);
        X X = X.X ();
        if (X.X (0)) {
            X ((X) X.X ());
        } else if (X.X (0)) {
            X ((X) X.X ());
        } else if (X.X (0)) {
            X X = X ();
            X (X.X ());
            X (X.X ());
        }

    }

    private X X (X X) {
        X X = (X) X ().X ();
        X X = X.X (X.X);
        if (X == 0) {
            return;
        }
        if (X == 0) {
            X.X (X.X);
        } else {
            X.X (X, X);
        }
    }

    private X X (X X) {
        X X = (X) X ().X ();
        X X = X.X (X.X);
        if (X == 0) {
            return;
        }
        if (X == 0) {
            X.X (X.X);
            X.X (X.X);
            X.X (X.X);
            X.X (X.X);
        } else {
            X.X (X, X.X ());
            X.X (X, X.X ());
            X.X (X, X.X ());
            X.X (X, X.X ());
        }
    }

    X X (X X, X X, X X) {
        X.X ().X (X, X, 0, 0, X.X (), X.X ());
    }

    public X X (X X, X X, X X, X X, X X, X X) {
        X.X ().X (X, X, X, X, X, X);
    }

}

