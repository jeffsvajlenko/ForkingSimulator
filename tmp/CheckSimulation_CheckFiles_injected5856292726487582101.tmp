package X.X.X.X.X.X.X;

import X.X.X.X.X.X.X;

import X.X.X.X.X.X.X.X;

import X.X.X.X.X.X.X.X;

import X.X.*;

import X.X.X;

import X.X.X;

import X.X.X;

public class X implements X {
    private X X = 0, X = 0;
    private X X = 0;
    private X [] X;

    public X () {
    }

    public X (X X) {
        X (X);
    }

    public X (X X) {
        X (X.X ());
        X (X);
    }

    public X (X X) {
        X (X.X ());
    }

    public X X () {
        return X == 0;
    }

    public static X X (X [] X, X [] X, X X, X X) {
        X X = 0, X = X - 0;
        do {
            X X = (X + X) / 0;
            X X = X [X];
            if (X == X) return X [X];
            else if (X < X) X = X - 0;
            else X = X + 0;

        } while (X <= X);
        return 0;
    }

    public X X (X X) {
        X [] X = X ();
        return X (X, X, X, X);
    }

    public X (X [] X) {
        X X = new X (X);
        X [] X = new X [X.X];
        X [] X = new X [X.X];
        X X = 0;
        try {
            while (X.X () > 0) {
                X X = X.X ();
                X [X] = X;
                X X = X.X (X);
                X X;
                if (X instanceof X) X = X ((X) X);
                else X = X (X);

                X.X (X);
                X [X] = X;
                X ++;
            }
        } catch (X X) {
            throw new X (X.X ());
        }
        X = new X [X];
        X.X (X, 0, X, 0, X);
        for (X X = 0;
        X < X; X ++) {
            if (X [X] instanceof X) {
                X X = (X) X [X].X;
                X X = X.X + X.X ();
                X X = X (X, X, X, X);
                if (X == 0) throw new X (0 + X);

                X.X (X);
                if (X instanceof X) {
                    X X = (X) X;
                    X [] X = X.X ();
                    for (X X = 0;
                    X < X.X; X ++) {
                        X = X.X + X [X];
                        X = X (X, X, X, X);
                        if (X == 0) throw new X (0 + X);

                        X.X (X, X);
                    }
                }
            }
        }
    }

    public X X (X X, X X) {
        if (X == 0) throw new X (0);

        if (X.X ()) return X;

        X X = X.X, X = X.X;
        X.X = X.X;
        X.X.X = X;
        X.X.X = X;
        if (X != 0) X.X = X.X;
        else X = X.X;

        X += X.X;
        X.X ();
        return X;
    }

    public X X (X X, X X) {
        X X;
        if ((X = X (X)) == 0) throw new X (0 + X + 0);

        return X (X, X);
    }

    public X X (X X) {
        if (X == 0) throw new X (0);

        if (X.X ()) return 0;

        if (X ()) {
            X = X.X;
            X = X.X;
            X = X.X;
            X.X ();
            return X;
        } else return X (X, X);

    }

    private X X (X X) {
        if (X ()) {
            X = X = X;
            X.X = X.X = 0;
        } else {
            X.X = X;
            X.X = X;
            X.X = 0;
            X X = X.X (X);
            X = X;
        }
        X ++;
    }

    public X X (X X) {
        X X = X.X (X);
        X (X);
        return X;
    }

    public X X (X X) {
        X X = X.X (X);
        X (X);
        return X;
    }

    public X X (X X, X X) {
        return X (X, new X (X));
    }

    public X X (X X, X X) {
        return X (X, X.X ());
    }

    public X X (X X) {
        return X (X.X ());
    }

    public X X (X X, X X) {
        return X (X, X.X ());
    }

    public X X (X X, X X) {
        return X (X, new X (X));
    }

    public X X (X X, X X) {
        X X = X.X (X);
        X X = new X ();
        X.X (X);
        X (X, X);
        return X;
    }

    public X X (X X, X X) {
        if (X == 0) throw new X (0);

        if (X.X ()) return X;

        X X = X.X, X = X.X;
        X.X = X.X;
        X.X.X = X;
        X.X.X = X;
        if (X != 0) X.X = X.X;
        else X = X.X;

        X += X.X;
        X.X ();
        return X;
    }

    public X X (X X) {
        if (X ()) {
            X (X);
            return X;
        } else return X (X, X);

    }

    private X X (X X) {
        if (X ()) {
            X = X = X;
            X.X = X.X = 0;
        } else {
            X.X = X;
            X.X = X;
            X.X = 0;
            X = X;
        }
        X ++;
    }

    public X X (X X, X X) {
        X X;
        if ((X = X (X)) == 0) throw new X (0 + X + 0);

        return X (X, X);
    }

    public X X (X X) {
        X X = X.X (X);
        X (X);
        return X;
    }

    public X X (X X) {
        X X = X.X (X);
        X (X);
        return X;
    }

    public X X (X X, X X) {
        return X (X, new X (X));
    }

    public X X (X X, X X) {
        return X (X, X.X ());
    }

    public X X (X X) {
        return X (X.X ());
    }

    public X X (X X, X X) {
        return X (X, new X (X));
    }

    public X X (X X, X X) {
        return X (X, X.X ());
    }

    public X X (X X, X X) {
        X.X (X);
        X X = X.X (X);
        X X = new X ();
        X.X (X);
        X (X, X);
        return X;
    }

    public X X (X X, X X, X X) {
        if ((X == 0) || (X == 0)) throw new X (0 + X + 0 + X);

        if ((X == X) || (X == X)) throw new X (0 + X + 0 + X + 0 + X);

        for (X X = X;
        X != X.X; X = X.X) {
            if (X == 0) throw new X (0 + X + 0 + X);
            else if (X == X) throw new X (0 + X + 0 + X + 0 + X);

        }
        X X = X.X, X = X.X;
        if (X != 0) X.X = X;
        else X.X = X;

        if (X != 0) X.X = X;
        else X.X = X;

        X.X = X.X = 0;
        if (X == 0) {
            X.X = X;
            X.X = X.X;
            X.X = X;
        } else {
            X = X.X;
            X.X = X;
            X.X = X;
            X.X = X;
            if (X != 0) X.X = X;

        }
    }

    public X X (X X, X X) {
        X (X, X, X);
    }

    private X X (X X, X X) throws X {
        X X, X;
        if ((X == 0) && (X == 0)) {
            X = X = X;
            X = X = 0;
        } else {
            if (X == 0) {
                X = X;
                X = X;
            } else {
                X = X.X;
                X.X = X;
            }
            if (X == 0) {
                X = X;
                X = X;
            } else {
                X = X.X;
                X.X = X;
            }
        }
        X.X = 0;
        X.X = 0;
        X X = new X ();
        for (X X = X;
        X != 0; X = X.X) X.X ().X ();

        X X = new X (0);
        for (X X = X;
        X != 0; X = X) {
            X = X.X;
            X --;
            if (X.X ()) {
                X.X (X);
                X.X (X.X (0) + 0);
                X.X = X.X = 0;
            } else X.X ();

        }
        X.X (0);
        if (! X.X ()) {
            X [] X = new X [X.X ()];
            X.X (X);
            throw new X (X, X.X ());
        }
    }

    public X X (X X) throws X {
        X (X.X, X.X);
    }

    public X X (X X) throws X {
        X X;
        if ((X = X (X)) == 0) throw new X (0 + X + 0);

        X (X);
    }

    public X X (X X, X X) throws X {
        X (X.X, X.X);
    }

    public X X (X X, X X) throws X {
        X X, X;
        if ((X = X (X)) == 0) throw new X (0 + X + 0);

        if ((X = X (X)) == 0) throw new X (0 + X + 0);

        X (X, X);
    }

    private X X (X X) {
        for (X X = X;
        X != 0; X = X.X) if (X.X == X) return X;

        return 0;
    }

    private X X (X X) {
        for (X X = X;
        X != 0; X = X.X) if (X.X == X) return X;

        return 0;
    }

    public X X (X X) {
        if (X == 0) return 0;

        for (X X = X;
        X != 0; X = X.X) if (X == X) return 0;

        return 0;
    }

    public X X (X X) {
        return X (X) != 0;
    }

    public X X () {
        X (0);
    }

    public X X (X X) {
        X X = 0, X = 0;
        X X = 0, X = 0;
        X [] X = new X [X];
        if (X) {
            for (X X = X;
            X != 0; X = X.X) {
                X X = X.X;
                if (X instanceof X) {
                    X X = ((X) X).X ().X;
                    if (! X (X)) throw new X (0 + X.X [X.X] + 0 + X + 0);

                    if (X instanceof X) {
                        X [] X = ((X) X).X ();
                        for (X X = 0;
                        X < X.X; X ++) {
                            X = X [X].X;
                            if (! X (X)) throw new X (0 + X.X [X.X] + 0 + X + 0);

                        }
                    }
                    if (! (X instanceof X)) throw new X (0 + X.X [X.X] + 0 + X + 0);

                }
            }
        }
        for (X X = X;
        X != 0; X = X.X) {
            X X = X.X;
            X.X (X);
            X [X ++] = X;
            switch (X.X ()) {
                case X.X :
                case X.X :
                    X += 0;
                    break;
                case X.X :
                case X.X :
                    X += 0;
                    break;
            }
            X += X.X ();
        }
        for (X X = X;
        X != 0; X = X.X) X += X.X (X, X);

        X = X = 0;
        for (X X = X;
        X != 0; X = X.X) {
            X X = X.X;
            X.X (X);
            X [X ++] = X;
            X += X.X ();
        }
        X = new X [X];
        X.X (X, 0, X, 0, X);
    }

    public X [] X () {
        X ();
        X X = new X ();
        X X = new X (X);
        try {
            for (X X = X;
            X != 0; X = X.X) {
                X X = X.X;
                X.X (X);
            }
        } catch (X X) {
            X.X.X (X);
            return 0;
        }
        return X.X ();
    }

    public X [] X () {
        X X = new X (X ());
        X X = new X ();
        try {
            while (X.X () > 0) {
                X.X (X.X (X));
            }
        } catch (X X) {
            throw new X (X.X ());
        }
        X [] X = new X [X.X ()];
        X.X (X);
        return X;
    }

    public X X () {
        return X (0);
    }

    public X X (X X) {
        X X = new X ();
        for (X X = X;
        X != 0; X = X.X) {
            X.X (X.X (X) + 0);
        }
        return X.X ();
    }

    public X X () {
        return new X () {
            private X X = X;

            public X X () {
                X X = X;
                X = X.X;
                return X;
            }

            public X X () {
                throw new X ();
            }

            public X X () {
                return X != 0;
            }

        }

        ;
    }

    public X [] X () {
        X [] X = new X [X];
        X X = X;
        for (X X = 0;
        X < X; X ++) {
            X [X] = X;
            X = X.X;
        }
        return X;
    }

    public X [] X () {
        return X;
    }

    public X X () {
        X X = new X ();
        X X = new X ();
        for (X X = X;
        X != 0; X = X.X) {
            X X = X.X;
            X X = X.X ();
            if (X instanceof X) X.X (X, X.X ((X) X));
            else X.X (X, X.X (X));

        }
        X X = X;
        X X = X.X;
        while (X != 0) {
            X X = X.X;
            X X = X.X;
            if (X instanceof X) {
                X X = (X) X;
                X X = (X) X;
                X X = X.X ();
                X.X ((X) X.X (X));
                if (X instanceof X) {
                    X [] X = ((X) X).X ();
                    X [] X = ((X) X).X ();
                    for (X X = 0;
                    X < X.X; X ++) {
                        X [X] = (X) X.X (X [X]);
                    }
                }
            }
            X = X.X;
            X = X.X;
        }
        return X;
    }

    public X X (X X, X X) {
        for (X X = X;
        X != 0; X = X.X) {
            X X = X.X;
            if (X instanceof X) {
                X X = (X) X;
                X X = X.X (X.X ());
                X.X (X.X (X, X));
            }
        }
    }

    private X X () {
        X = X = 0;
        X = 0;
    }

    public X X () {
        for (X X = X;
        X != 0; X = X.X) X.X ();

        X ();
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X (X X, X X) {
        for (X X = X;
        X != 0; X = X.X) {
            X X = X.X ();
            if (X instanceof X) {
                X X = (X) X;
                X X = X.X ();
                if (X == X) X.X (X);

                if (X instanceof X) {
                    X [] X = ((X) X).X ();
                    for (X X = 0;
                    X < X.X; X ++) if (X [X] == X) ((X) X).X (X, X);

                }
            }
        }
    }

    public X X (X [] X, X X, X X) {
        for (X X = 0;
        X < X.X; X ++) {
            X X = X [X].X ();
            X X = X [X].X ();
            if (X == X) X [X].X (X);

            if (X == X) X [X].X (X);

        }
    }

    public X X (X [] X, X X, X X) {
        for (X X = 0;
        X < X.X; X ++) {
            if (X [X].X () == X) X [X].X (X);

            if (X [X].X () == X) X [X].X (X);

            if (X [X].X () == X) X [X].X (X);

        }
    }

    private X X;

    public X X (X X) {
        if (X == 0) X = new X ();

        X.X (X);
    }

    public X X (X X) {
        if (X != 0) X.X (X);

    }

    public X X () {
        if (X != 0) for (X X = X.X ();
        X.X ();) ((X) X.X ()).X (X);

    }

}

