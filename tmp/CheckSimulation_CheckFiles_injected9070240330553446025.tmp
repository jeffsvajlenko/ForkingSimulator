package X.X.X.X;

import X.X.X;

import X.X.X;

import X.X.X.X.X;

import X.X.*;

import X.X.X.X;

import X.X.*;

class X extends X {
    public static final X X = new X (0);
    public static final X X = new X (X.X, X.X, X.X, X.X, X.X);
    public static final X X = new X (X.X, X.X, X.X, X.X, X.X);
    public static final X X = new X (X.X, X.X, X.X, X.X, X.X);
    public static final X X = new X (X.X, X.X, X.X, X.X, X.X);
    private X X;
    private X X;
    private X X;
    private X X;
    private X X;
    private X X;
    private X X;
    private X X;

    public X (X X, X X, X X, X X, X X, X X, X X, X X, X X, X X, X X) {
        X.X = X;
        X (X, X, X, X, X, X, X, X.X (X), X.X (X), X, X);
    }

    private X X (X X) {
        return X.X (X, X + 0, 0);
    }

    protected X X () {
        if (X () != 0) {
        }
        if (! X ().X (0)) {
            X ().X (X.X (X (), X ().X (), X (), X ()));
        }
        if (X () == 0) {
        } else if (! X ().X (0)) {
            if (X () != 0) {
                X ().X ((X) X ().X (X.X));
                X ().X ((X) X ().X (X.X));
            } else {
                X ().X (X.X (X, X ().X (), X (), X ()));
                X ().X (X ().X ());
            }
        }

        if (X ()) {
            if (X () != 0) {
                X ().X (X.X (X (), X));
                X ().X (X.X (X (), X));
            }
            if (X () != 0) {
                X ().X (X.X (X (), X));
                X ().X (X.X (X (), X));
            }
        }
        if (X ()) {
            X ().X (X ().X () + X ().X () + X ());
            X ().X (X.X (X ().X (), X ().X (), X ().X (), X ().X (), X ().X ()));
        } else {
            X X = new X ();
            X X = new X ();
            X.X (X, X (), X (), X (), X (), X (), X (), X (), X (), X, X, X ());
            X.X += X ();
            X ().X (X.X);
        }
    }

    protected X X () {
        X = X = X (X, X ().X ());
        if (X ()) {
            X (X (), X);
            X X = X ();
            if ((X ().X () == 0) || (X ().X () == 0)) {
            }
            X ().X (X (X, X ().X () + X ().X () + X));
        } else {
            X ().X (X (X));
            X X = X ().X () - X ().X ();
            if (X ().X () > 0) {
                X -= X ();
            }
            X ().X (X (X, X));
        }
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    public X X () {
        return X;
    }

    protected X X (X X) {
        if (X () && (! 0.X (X ()))) {
            X.X ().X = X;
        } else {
        }
    }

    public X X () {
        if (X ()) {
            return X;
        } else {
            return X;
        }
    }

    public X X () {
        if (X ()) {
            return X;
        } else {
            return X;
        }
    }

    protected X X (X X) {
        X.X (X, X (), X (), X (), X (), X (), X (), X (), X.X (), X.X (), X.X (), X ());
    }

}

