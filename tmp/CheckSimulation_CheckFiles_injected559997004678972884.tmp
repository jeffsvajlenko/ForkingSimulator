package X.X.X.X;

import X.X.*;

import X.X.*;

import X.X.*;

import X.X.X.X.*;

import X.X.X;

class X extends X {

    public X (X X) {
        X (X);
    }

    protected X X (X X) {
        if (X () != X) {
            X ();
        }
        X.X (X);
    }

    public X X (X X) {
        X.X (X);
        if (X.X () == X) {
            if (X.X () == X.X) {
                if (X instanceof X) {
                    ((X) X).X (X (0));
                }
                if (X instanceof X) {
                    ((X) X).X (X (0));
                }
            }
        }
    }

    public X X (X X) {
        X X = X.X ();
        X X = ((X) X).X (X, X.X);
        X X = X ();
        X.X = X.X = 0;
        X.X (X, X, X);
        X.X ().X (X, X, 0, 0, X.X, X.X, X.X ());
        X X = 0;
        X.X ().X (X, X, 0, 0, X (), X (), X.X ());
        X.X ();
        X X = X (X);
        X.X ();
        for (X X = 0;
        X < X (); X ++) {
            X.X ();
            X X = X (X);
            X.X ();
            X X = X.X ();
            X X = X.X (X.X, X.X, X.X, X.X);
            X.X ();
            X.X ();
            X.X ();
            X.X (X);
            X.X (0);
            X.X ();
        }
        X.X (0);
        X.X ();
    }

    private X X (X X) {
        if (X) {
            if (X.X () == X.X) {
                return X.X;
            }
            return X.X;
        }
        if (X.X () == X.X) {
            return X.X;
        }
        return X.X;
    }

    protected X X () {
        X X = new X (X.X);
        X X = X ();
        X.X (0);
        X.X (X.X (X.X));
        X.X (X.X (X.X));
        X.X (new X (X, X));
        X.X (X.X (X.X));
        X.X (0);
        X.X (0);
        X.X (0);
        X.X (X (0));
        return X;
    }

    private X X () {
        return X.X (X.X (), X, 0, X);
    }

    protected X X () {
        X X = new X (X.X);
        X X = X ();
        X.X (0);
        X.X (new X (X, X));
        X.X (0);
        X.X (new X (X, X));
        X.X (0);
        X.X (X.X (X.X));
        X.X (0);
        X.X (0);
        X.X (0);
        X.X (0);
        X.X (X (0));
        return X;
    }

}

